// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
} 

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
 id        Int      @id @default(autoincrement())
 email     String   @unique
 name      String
 password  String
 posts     Post[] // Relaci√≥n 1 a muchos
 createdAt DateTime @default(now())
 }

model Post {
 id       Int    @id @default(autoincrement())
 title    String
 content  String
 author   User   @relation(fields: [authorId], references: [id], onDelete: SetNull, onUpdate: Cascade)
 authorId Int
}

model Book {
 id        Int      @id @default(autoincrement())
 title     String
 img       String?
 price     Int
 createdAt DateTime @default(now())
 published Boolean @default(false)
 authorId Int 
 author   Author @relation(fields: [authorId], references: [id])
 categories Category[]
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

model Author {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[] // Un autor puede tener muchos libros
 }

 model Category {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
 }